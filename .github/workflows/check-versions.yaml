name: Check versions

on: pull_request

jobs:
  list-pr-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout last two commits of the PR
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Identify files changed in next but not current, or vice versa
        run: |
          next_files=($( git diff --name-only HEAD^ | grep ^docs/ | sed 's/^docs\///')) 
          current_files=($( git diff --name-only HEAD^ | grep ^versioned_docs/version-8.3/ | sed 's/^versioned_docs\/version-8.3\///' )) 

          echo $next_files
          echo "-------------"
          echo $current_files
          echo "-------------"

          missing_files=(`echo ${next_files[@]} ${current_files[@]} | tr ' ' '\n' | sort | uniq -u`)

          echo $missing_files

          only_in_next=(`echo ${next_files[@]} ${missing_files[@]} | tr ' ' '\n' | sort | uniq -D | uniq`)
          only_in_current=(`echo ${current_files[@]} ${missing_files[@]} | tr ' ' '\n' | sort | uniq -D | uniq`)

          echo FILES_ONLY_IN_NEXT="(${only_in_next[@]})" >> $GITHUB_ENV
          echo FILES_ONLY_IN_CURRENT="(${only_in_current[@]})" >> $GITHUB_ENV
      - name: Emit uncommon files
        run: |
          if [ ${#only_in_next[@]} -eq 0 ] && [ ${#only_in_current[@]} -eq 0 ]; then
            exit 0
          fi 

          if [ ${#only_in_next[@]} -gt 0 ]; then
            echo "These files were changed only in the *next* version. You might want to duplicate these changes in the *current* version."
            echo ${only_in_next[@]} | tr ' ' '\n' | sed 's/^/  docs\//'
          fi

          if [ ${#only_in_current[@]} -gt 0 ]; then
            echo "These files were changed only in the *current* version. You might want to duplicate these changes in the *next* version."
            echo ${only_in_current[@]} | tr ' ' '\n' | sed 's/^/  versioned_docs\/version-8.3\//'
          fi
